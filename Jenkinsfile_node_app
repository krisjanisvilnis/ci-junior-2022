pipeline {
    agent any
    triggers {
        pollSCM('*/1 * * * *')
    }

    stages {
        stage('build') {
            steps {
                echo "Building node application"
            }
        }
        stage('deploy-dev') {
            steps {
                script{
                    deploy("DEV");
                }
            }
        }
        stage('test-dev') {
            steps {
                script{
                    test("DEV");
                }
            }
        }
        stage('deploy-int') {
            steps {
                script{
                    deploy("INT");
                }
            }
        }
        stage('test-int') {
            steps {
                script{
                    test("INT");
                }            
            }
        }
        stage('deploy-PROD}') {
            steps {
                script{
                    deploy("PROD");
                }
            }
        }
        stage('test-PROD') {
            steps {
                script{
                    test("PROD");
                }
            }
        }
    }
}

def deploy(String env){
    echo "Deploying on ${env} environment triggered"
    build job: 'UI Testss', parameters: [string(name: "ENVIRONMENT", value:"${env}")]
}

def test(String env){
    echo "Testing on ${env} environment triggered"
    sh "docker run --network=host -d -t --name api_tests_executor_${env} api_test_executor"
    sh "docker exec api_tests_executor_${env} cucumber --tags=${env} --format html --out test-output/report.html"
    sh "docker cp api_tests_executor_${env}://usr/src/api-tests/test-output/report.html report_${env}.html"
    sh "docker rm -f api_tests_executor_${env}"
}